// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/pkg/pb/runner/runner.proto

package runner

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunCodeRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Input                string   `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Language             string   `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunCodeRequest) Reset()         { *m = RunCodeRequest{} }
func (m *RunCodeRequest) String() string { return proto.CompactTextString(m) }
func (*RunCodeRequest) ProtoMessage()    {}
func (*RunCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6723206f3cbf6129, []int{0}
}

func (m *RunCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCodeRequest.Unmarshal(m, b)
}
func (m *RunCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCodeRequest.Marshal(b, m, deterministic)
}
func (m *RunCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCodeRequest.Merge(m, src)
}
func (m *RunCodeRequest) XXX_Size() int {
	return xxx_messageInfo_RunCodeRequest.Size(m)
}
func (m *RunCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunCodeRequest proto.InternalMessageInfo

func (m *RunCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RunCodeRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *RunCodeRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *RunCodeRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type RunCodeReply struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunCodeReply) Reset()         { *m = RunCodeReply{} }
func (m *RunCodeReply) String() string { return proto.CompactTextString(m) }
func (*RunCodeReply) ProtoMessage()    {}
func (*RunCodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_6723206f3cbf6129, []int{1}
}

func (m *RunCodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCodeReply.Unmarshal(m, b)
}
func (m *RunCodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCodeReply.Marshal(b, m, deterministic)
}
func (m *RunCodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCodeReply.Merge(m, src)
}
func (m *RunCodeReply) XXX_Size() int {
	return xxx_messageInfo_RunCodeReply.Size(m)
}
func (m *RunCodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_RunCodeReply proto.InternalMessageInfo

func (m *RunCodeReply) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*RunCodeRequest)(nil), "runner.RunCodeRequest")
	proto.RegisterType((*RunCodeReply)(nil), "runner.RunCodeReply")
}

func init() {
	proto.RegisterFile("internal/pkg/pb/runner/runner.proto", fileDescriptor_6723206f3cbf6129)
}

var fileDescriptor_6723206f3cbf6129 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xad, 0xd6, 0xad, 0x0e, 0xe2, 0x21, 0x94, 0x12, 0x7a, 0x92, 0x0a, 0xe2, 0xc5, 0x0d,
	0xe8, 0xc9, 0x63, 0xdd, 0xb3, 0x20, 0x7b, 0xf4, 0x96, 0x6d, 0x87, 0x34, 0x74, 0x37, 0x13, 0x67,
	0x33, 0x42, 0xff, 0xbd, 0x98, 0x5d, 0x0b, 0xa2, 0xa7, 0xe4, 0x9b, 0x47, 0xf2, 0xde, 0x3c, 0xb8,
	0xf5, 0x21, 0x21, 0x07, 0xdb, 0x9a, 0xb8, 0x77, 0x26, 0x36, 0x86, 0x25, 0x04, 0xe4, 0xf1, 0x28,
	0x23, 0x53, 0x22, 0x55, 0x0c, 0xb4, 0x8a, 0x70, 0x5d, 0x4b, 0xa8, 0x68, 0x8b, 0x35, 0x7e, 0x08,
	0xf6, 0x49, 0x29, 0x98, 0x6e, 0x68, 0x8b, 0x7a, 0x72, 0x33, 0xb9, 0xbf, 0xac, 0xf3, 0x5d, 0xcd,
	0xe1, 0xdc, 0x87, 0x28, 0x49, 0x9f, 0xe6, 0xe1, 0x00, 0x6a, 0x09, 0x17, 0xad, 0x0d, 0x4e, 0xac,
	0x43, 0x7d, 0x96, 0x85, 0x23, 0x2b, 0x0d, 0xb3, 0x4f, 0xe4, 0xde, 0x53, 0xd0, 0xd3, 0x2c, 0xfd,
	0xe0, 0xea, 0x0e, 0xae, 0x8e, 0x8e, 0xb1, 0x3d, 0xa8, 0x05, 0x14, 0x24, 0xe9, 0xfb, 0xf3, 0xc1,
	0x71, 0xa4, 0xc7, 0x0a, 0x8a, 0x3a, 0x67, 0x54, 0xcf, 0x30, 0x1b, 0x5f, 0xa8, 0x45, 0x39, 0x6e,
	0xf1, 0x3b, 0xf4, 0x72, 0xfe, 0x67, 0x1e, 0xdb, 0xc3, 0xea, 0xe4, 0xa5, 0x7a, 0x5f, 0x3b, 0x9f,
	0x76, 0xd2, 0x94, 0x1b, 0xea, 0xcc, 0xba, 0x97, 0x9d, 0x7d, 0xb0, 0xe6, 0x8d, 0xc9, 0xb1, 0xed,
	0x3a, 0x1f, 0x5c, 0x45, 0xc2, 0x3d, 0xbe, 0x5a, 0xde, 0x63, 0x32, 0xff, 0x17, 0xd7, 0x14, 0xb9,
	0xb2, 0xa7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xc7, 0x9f, 0x03, 0x59, 0x01, 0x00, 0x00,
}
